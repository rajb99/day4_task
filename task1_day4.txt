a. Odd numbers in an array
// Anonymous Function:

let odd=function(arr){
                  for(var i = 0 ; i< arr.length ; i++){
                        if(arr[i]%2!=0){
                          console.log(arr[i])
                        } 
                  }
                }
                odd([1,2,3,4,5,6,7,8,9,10])

// IIFE Function:
  
(
      function(arr){
          for(var i = 0 ; i< arr.length ; i++){
                        if(arr[i]%2!=0){
                          console.log(arr[i])
                        } 
                  }
             })([1,2,3,4,5,6,7,8,9,10])


b. All strings to title caps
// Anonymous Function:

let num= function(str) {
                    str= str.toLowerCase().split(' ');
                    for (var i= 0; i<str.length; i++) {
                      str[i]= str[i].charAt(0).toUpperCase() + str[i].slice(1); 
                    } 
                    return str.join(' ');
                    // console.log(str.join(' '))
                  }
num("GUVI GEEK");

// IIFE Function:

(function(str) {
                    str = str.toLowerCase().split(' ');
                    for (var i = 0; i < str.length; i++) {
                      str[i] = str[i].charAt(0).toUpperCase() + str[i].slice(1); 
                    } 
                    return str.join(' ');
                    // console.log(str.join(' '))
                  })("GUVI geek");


c. Sum of all numbers in an array
// Anonymous Function:

let num=function(arr){
                  var sum= 0;
                  for(var i=0; i< arr.length; i++){
                     sum= sum + arr[i];
                  }
                 // return sum;
                console.log(sum);
                }
    num([1,2,3,4,5]);

// IIFE Function:

(function(arr){
             var sum= 0;
                  for(var i=0; i<arr.length; i++){
                     sum= sum + arr[i];
                  }
                 // return sum;
                console.log(sum);
             })([1,2,3,4,5]);


d. All prime numbers in an array
// Anonymous Function:

let array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let prime = array.filter(number => {
    for (let i = 2; i <= Math.sqrt(number); i++) {
        if (number % i == 0) 
        return false;
    }
    return number > 1;
});
console.log(prime);

// IIFE Function:

let array = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];
let primenum = (() => {
    let primes = [];
    array.forEach(number => {
        let isPrime = true;
        if (number <= 1) {
            isPrime = false;
        } else {
            for (let i = 2; i <= Math.sqrt(number); i++) {
                if (number % i == 0) {
                    isPrime = false;
                    break;
                }
            }
        }
        if (isPrime) {
            primes.push(number);
        }
    });
    return primes;
})();
console.log(primenum);


e. Return all the palindromes in an array
// Anonymous Function:

const Pal= function(arr) {
    return arr.filter(item => {
        const str= item.toString().toLowerCase();
        const revStr= str.split('').reverse().join('');
        return str == revStr;
    });
}

const array = ["wow", "mom", "hello", 12321, "hi", "madam"];
const palindromes = Pal(array);
console.log("Palindromes in the array:", palindromes);

// IIFE Function:

const palindromes = (function(arr) {
    return arr.filter(item => {
        const str = item.toString().toLowerCase();
        const revStr = str.split('').reverse().join('');
        return str === revStr;
    });
})(["wow", "mom", "hello", 12321, "hi", "madam"]);

console.log("Palindromes:", palindromes);


f. Return median of two sorted arrays of the same size
// Anonymous Function:

 const findMedian = function(arr1, arr2) {
    const mergedArray = arr1.concat(arr2);
    const sortedArray = mergedArray.sort((a, b) => a-b);
    const midIndex = Math.floor(sortedArray.length/2);
    
    if (sortedArray.length%2 == 0) {
        return (sortedArray[midIndex-1] + sortedArray[midIndex])/2;
    } else {
        return sortedArray[midIndex];
    }
}

const array1 = [1, 3, 5];
const array2 = [2, 4, 6];
const median = findMedian(array1, array2);
console.log("Median of sorted arrays:", median);

// IIFE Function:

const median = (function(arr1, arr2) {
    const mergedArray = arr1.concat(arr2);
    const sortedArray = mergedArray.sort((a, b) => a-b);
    const midIndex = Math.floor(sortedArray.length/2);
    
    if (sortedArray.length%2 == 0) {
        return (sortedArray[midIndex-1] + sortedArray[midIndex])/2;
    } else {
        return sortedArray[midIndex];
    }
})([1, 3, 5], [2, 4, 6]);

console.log("Median of sorted arrays:", median);


g. Remove duplicates from an array
// Anonymous Function:

const Duplicates = function(arr) {
    return arr.filter((item, index) => arr.indexOf(item) == index);
}

const array = [1, 2, 3, 4, 2, 3, 5];
const newArray = Duplicates(array);
console.log(newArray);

// IIFE Function:

const newArray = (function(arr){
    return arr.filter((item, index) => arr.indexOf(item)==index);
})([1, 2, 3, 4, 2, 3, 5]);

console.log(newArray);


h. Rotate an array by k times
// Anonymous Function:

const rotateArr= function(arr, k){
    const len= arr.length;
    const rotation= k%len;

    const rotatedArray = arr.slice(rotation).concat(arr.slice(0, rotation));
    return rotatedArray;
}
const array= [1, 2, 3, 4, 5];
const rotation= 2;
const rotatedArr= rotateArr(array, rotation);
console.log(`Array on rotating ${rotation} times:`, rotatedArr);

// IIFE Function:

const rotatedArr= (function(arr, k){
    const len= arr.length;
    const rotation= k%len;

    const rotatedArr= arr.slice(rotation).concat(arr.slice(0, rotation));
    return rotatedArr;
})([1, 2, 3, 4, 5]);

console.log("Array on rotating:", rotatedArr);








